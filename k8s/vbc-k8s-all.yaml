apiVersion: v1
kind: Service
metadata:
  name: vbc-mongo
  labels:
    name: vbc-mongo
spec:
  selector:
    app: vbc-mongo
  ports:
    - port: 27017
      targetPort: 27017

---
apiVersion: apps/v1
kind: ReplicaSet
metadata:
  name: vbc-mongo
  labels:
    app: vbc-mongo
spec:
  replicas: 1
  template:
    metadata:
      name: vbc-mongo
      labels:
        app: vbc-mongo
    spec:
      containers:
      - name: mongo
        image: davidshue/mongodb:3.4
        imagePullPolicy: IfNotPresent
        env:
        - name: MONGODB_DATABASE
          value: vbc
        - name: MONGODB_USER
          valueFrom:
            secretKeyRef:
              name: vbc-secret
              key: mongo-username
        - name: MONGODB_PASS
          valueFrom:
            secretKeyRef:
              name: vbc-secret
              key: mongo-password
      restartPolicy: Always
  selector:
    matchLabels:
      app: vbc-mongo

---
apiVersion: v1
kind: Service
metadata:
  name: vbc-kafka
  labels:
    name: vbc-kafka
spec:
  selector:
    app: vbc-kafka
  ports:
    - name: zookeeper
      port: 2181
      targetPort: 2181
    - name: kafka
      port: 9092
      targetPort: 9092

---
apiVersion: apps/v1
kind: ReplicaSet
metadata:
  name: vbc-kafka
  labels:
    app: vbc-kafka
spec:
  replicas: 1
  template:
    metadata:
      name: vbc-kafka
      labels:
        app: vbc-kafka
    spec:
      containers:
      - name: kafka
        image: spotify/kafka:latest
        imagePullPolicy: IfNotPresent
        env:
          - name: ADVERTISED_HOST
            value: vbc-kafka
      restartPolicy: Always
  selector:
    matchLabels:
      app: vbc-kafka

---
apiVersion: v1
kind: Service
metadata:
  name: vbc-config
spec:
  selector:
    app: vbc-config
  ports:
    -
      nodePort: 31888
      port: 8888
      targetPort: 8888
  type: NodePort

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: vbc-config
  labels:
    app: vbc-config
spec:
  replicas: 1
  template:
    metadata:
      name: vbc-config
      labels:
        app: vbc-config
    spec:
      containers:
      - name: vbc-config
        image: davidshue/vbc-config:latest
        imagePullPolicy: IfNotPresent
        env:
          - name: VBC_PROFILE
            value: k8s
          - name: JAVA_OPTS
            value: -server -Xms32m -Xmx64m -XX:+UseParallelOldGC
      restartPolicy: Always
  selector:
    matchLabels:
      app: vbc-config

---
apiVersion: v1
kind: Service
metadata:
  name: vbc-server
spec:
  selector:
    app: vbc-server
  ports:
    -
      nodePort: 31761
      port: 8761
      targetPort: 8761
  type: NodePort

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: vbc-server
  labels:
    app: vbc-server
spec:
  replicas: 1
  template:
    metadata:
      name: vbc-server
      labels:
        app: vbc-server
    spec:
      containers:
      - name: vbc-server
        image: davidshue/vbc-server:latest
        imagePullPolicy: IfNotPresent
        env:
          - name: VBC_PROFILE
            value: k8s
          - name: JAVA_OPTS
            value: -server -Xms32m -Xmx64m -XX:+UseParallelOldGC
      restartPolicy: Always
  selector:
    matchLabels:
      app: vbc-server

---
apiVersion: v1
kind: Service
metadata:
  name: vbc-gateway
spec:
  selector:
    app: vbc-gateway
  ports:
    -
      port: 8005
      targetPort: 8005
  type: ClusterIP

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: vbc-gateway
  labels:
    app: vbc-gateway
spec:
  replicas: 1
  template:
    metadata:
      name: vbc-gateway
      labels:
        app: vbc-gateway
    spec:
      containers:
      - name: vbc-gateway
        image: davidshue/vbc-gateway:latest
        imagePullPolicy: IfNotPresent
        env:
          - name: VBC_PROFILE
            value: k8s
          - name: JAVA_OPTS
            value: -server -Xms32m -Xmx64m -XX:+UseParallelOldGC
      restartPolicy: Always
  selector:
    matchLabels:
      app: vbc-gateway

---
apiVersion: v1
kind: Service
metadata:
  labels:
    app: vbc-node
  name: vbc-node
spec:
  clusterIP: None
  ports:
  - port: 8002
    name: web
  selector:
    app: vbc-node

---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: vbc-node
  labels:
    app: vbc-node
spec:
  serviceName: vbc-node
  replicas: 2
  selector:
    matchLabels:
      app: vbc-node
  template:
    metadata:
      labels:
        app: vbc-node
    spec:
      containers:
      - name: vbc-node
        image: davidshue/vbc-node:latest
        ports:
        - containerPort: 8002
          name: web
        env:
        - name: VBC_PROFILE
          valueFrom:
            fieldRef:
                fieldPath: metadata.name
        - name: JAVA_OPTS
          value: -server -Xms128m -Xmx256m -XX:+UseParallelOldGC

---
apiVersion: v1
kind: Service
metadata:
  name: vbc-switch
spec:
  selector:
    app: vbc-switch
  ports:
    -
      name: http
      nodePort: 31009
      port: 7009
      targetPort: 7009
    -
      name: https
      nodePort: 31443
      port: 7443
      targetPort: 7443
  type: NodePort

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: vbc-switch
  labels:
    app: vbc-switch
spec:
  replicas: 1
  template:
    metadata:
      name: vbc-switch
      labels:
        app: vbc-switch
    spec:
      containers:
      - name: vbc-switch
        image: davidshue/vbc-switch:latest
        imagePullPolicy: IfNotPresent
        volumeMounts:
        - mountPath: /etc/zeronines/vbc
          name: keystore-volume
        env:
          - name: VBC_PROFILE
            value: k8s
          - name: JAVA_OPTS
            value: -server -Xms128m -Xmx256m -XX:+UseParallelOldGC
          - name: GATEWAY_HOST
            value: vbc-gateway
          - name: GATEWAY_PORT
            value: "8005"
      volumes:
        - name: keystore-volume
          configMap:
            name: v8-keystore
      restartPolicy: Always
  selector:
    matchLabels:
      app: vbc-switch
